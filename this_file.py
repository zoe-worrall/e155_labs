
''' Used to produce the lab02_testvectors testbench in Lab 2, Micro P's
# Number of bits to generate
switch1 = 2**4
switch2 = 2**4

s_vals = ["0000", "0001", "0010", "0011", "0100", "0101", "0110", "0111", "1000", "1001", "1010", "1011", "1100", "1101", "1110", "1111"]
sum_vals = ["00000", "00001", "00010", "00011", "00100", "00101", "00110", "00111", "01000", "01001", "01010", "01011", "01100", "01101", "01110", "01111", "10000", "10001", "10010", "10011", "10100", "10101", "10110", "10111", "11000", "11001", "11010", "11011", "11100", "11101", "11110", "11111"]
segment = ["1000000", "1111001", "0100100", "0110000", "0011001", "0010010", "0000010", "1111000", "0000000", "0010000", "0001000", "0000011", "1000110", "0100001", "0000110", "0001110"] 
seg_val = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]

for s1 in range(switch1):
    for s2 in range(switch2):
        sum = seg_val[s1] + seg_val[s2]
        string = s_vals[s1] + "_" + s_vals[s2] + "_" + segment[s1] + "_" + segment[s2] + "_" + sum_vals[sum]
        print(string)

'''

# Number of bits to generate
switch = 2**4
state0 = True

s_vals = ["0000", "0001", "0010", "0011", "0100", "0101", "0110", "0111", "1000", "1001", "1010", "1011", "1100", "1101", "1110", "1111"]
sum_vals = ["00000", "00001", "00010", "00011", "00100", "00101", "00110", "00111", "01000", "01001", "01010", "01011", "01100", "01101", "01110", "01111", "10000", "10001", "10010", "10011", "10100", "10101", "10110", "10111", "11000", "11001", "11010", "11011", "11100", "11101", "11110", "11111"]
segment = ["1000000", "1111001", "0100100", "0110000", "0011001", "0010010", "0000010", "1111000", "0000000", "0010000", "0001000", "0000011", "1000110", "0100001", "0000110", "0001110"] 
seg_val = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]

## Desired format: switch1_switch2_<if display 1 is on or off>_<the correct segment variables>_anode1_anode2

s = ""
anodes = ""
string = ""
for i in range(2):
    for s1 in range(switch):
        for s2 in range(switch):
            if state0: 
                s = "1_" + segment[s1]
                anodes = "0_1"
            else:      
                s = "0_" + segment[s2]
                anodes = "1_0"


            string = s_vals[s1] + "_" + s_vals[s2] + "_" + s + "_" + anodes
            print(string)
    state0 = not state0
